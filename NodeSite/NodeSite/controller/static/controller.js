// Generated by CoffeeScript 1.7.1
'use strict';
var ControllerList, getController, getControllerList, putController, renderControllerList;

ControllerList = (function() {
  function ControllerList(params) {
    var $renderTo, source, templateName;
    $renderTo = params.$renderTo, this.roomId = params.roomId;
    $renderTo.on("click", "input[type=checkbox]", $.proxy(this.clickEvent, this));
    this.$renderTo = $renderTo;
    this.intervalTime = 4000;
    templateName = "#controller-list-template";
    source = $(templateName).html();
    this.template = Handlebars.compile(source);
    Handlebars.registerHelper("cn_name", function(info) {
      var cnName, dict, enName;
      dict = {
        "yello_light": "黄灯",
        "blue_light": "蓝灯",
        "red_light": "红灯",
        "paifeng_fan": "排风扇",
        "yasuoji": "压缩机",
        "xunhuan_fan": "循环风",
        "jinfeng_fan": "进风扇",
        "jiashiqi": "加湿器",
        "neiji": "内机"
      };
      enName = info.data.key;
      return cnName = dict[enName];
    });
    Handlebars.registerHelper("checked", function() {
      var checked, state;
      state = this.state;
      if (state === 1) {
        checked = "checked";
      } else {
        checked = "";
      }
      return checked;
    });
    getControllerList(this.roomId, (function(_this) {
      return function(data) {
        return _this.render(data.body);
      };
    })(this));
  }

  ControllerList.prototype.clickEvent = function(e) {
    var $elt, action, answer, controllerId;
    $elt = $(e.target);
    answer = $elt.prop('checked');
    if (answer === true) {
      action = "on";
    } else if (answer === false) {
      action = "off";
    }
    controllerId = $elt.attr("cid");
    $elt.parent().append("<p>这在处理中。。。</p>");
    return putController(controllerId, action, {
      cl: this,
      $elt: $elt
    });
  };

  ControllerList.prototype.update = function(cid, value) {
    var $switch;
    if (!cid || !value) {
      return;
    }
    $switch = this.$renderTo.find("input[cid=" + cid + "]");
    if (value === "on") {
      return $switch.attr("checked", "checked");
    } else {
      return $switch.removeAttr("checked");
    }
  };

  ControllerList.prototype.render = function(context) {
    var $renderTo, clHTML, template;
    if (context === void 0) {
      context = this.context;
    }
    $renderTo = this.$renderTo, template = this.template;
    clHTML = template({
      context: context
    });
    this.context = context;
    return $renderTo.html(clHTML);
  };

  ControllerList.prototype.sync = function() {
    return this.timer = setInterval((function(_this) {
      return function() {
        if (!_this.roomId) {
          return;
        }
        return getControllerList(_this.roomId, function(data) {
          return _this.render(data.body);
        });
      };
    })(this), this.intervalTime);
  };

  ControllerList.prototype.stop = function() {
    return clearInterval(this.timer);
  };

  return ControllerList;

})();

renderControllerList = function(params) {
  var clHTML, context, renderTo, source, template, templateName;
  renderTo = params.renderTo, templateName = params.templateName, context = params.context;
  source = $(templateName).html();
  console.log(source);
  template = Handlebars.compile(source);
  clHTML = template({
    context: context
  });
  return $(renderTo).html(clHTML);
};

getControllerList = function(roomId, callback) {
  var url;
  if (arguments.length === 1) {
    callback = roomId;
    url = "/controller/list/";
  } else {
    url = "/controller/list/room/" + roomId + "/";
  }
  return $.ajax({
    url: url,
    type: "GET",
    success: function(data) {
      if (_.isFunction(callback)) {
        return callback(data);
      }
    },
    fail: function() {
      return alert("Get controller List Fail");
    }
  });
};

getController = function(controllerId, callback) {};

putController = function(cid, action, extra) {
  return $.ajax({
    url: "/controller/" + cid + "/",
    type: "PUT",
    context: extra,
    data: {
      action: action
    },
    success: function(data) {
      if (data.code === 0) {
        return $('p', this.$elt.parent()).remove();
      } else {
        this.cl.render();
        return alert(data.body);
      }
    },
    fail: function() {
      return alert("请检查网络连接！");
    }
  });
};
