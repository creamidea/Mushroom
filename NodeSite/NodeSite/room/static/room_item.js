// Generated by CoffeeScript 1.7.1
$(function() {
  'use strict';
  var $oneHourArea, $room, data, data_2, data_test, endTime, getRoom, i, now, roomId, sensorEnToCn, startTime, stream_index, stream_layers, stream_waves, _i;
  console.log("here is room item");
  roomId = window.location.pathname.replace(/(.*)\/room\/(\d+)\//g, "$2");
  sensorEnToCn = {
    "temperature": "温度",
    "co2": "二氧化碳",
    "humidity": "湿度",
    "light": "光照"
  };
  $room = $("#room-" + roomId);
  getRoom = function() {
    return $.ajax({
      url: "/room/" + roomId + "/",
      type: "GET",
      success: function(data) {
        var body, room;
        body = data.body;
        room = new Room;
        new RoomPresenter(room, $room);
        room.init(body);
        room.stop();
        room.getLatestData();
      },
      fail: function(data) {
        return alert("[room_list.coffee] get room faild");
      }
    });
  };
  getRoom();
  $oneHourArea = $('#realtime-chart');
  now = new Date();
  endTime = now.getTime();
  startTime = new Date(endTime - 3600000);
  endTime = now;
  getDataFromS({
    url: "/data/room/" + roomId + "/",
    requestData: {
      startTime: "2014/03/29 22:00:00",
      endTime: "2014/03/29 22:01:58"
    },
    callback: function(data) {
      var datapkg, html, key, _results;
      if (data.code === -1) {
        $oneHourArea.html("<p class=error>目前还没有数据</p>");
        return 0;
      }
      console.log(data.body);
      datapkg = dataPkgForD3(data.body);
      html = renderRTChart(datapkg);
      $oneHourArea.append(html);
      _results = [];
      for (key in datapkg) {
        data = datapkg[key];
        console.log(key, data);
        _results.push(drawLineChart({
          elt: "#" + key + " svg",
          data: data,
          xLabel: sensorEnToCn[key],
          yLabel: "采集值"
        }));
      }
      return _results;
    }
  });
  data = function() {
    return stream_layers(3, 10 + Math.random() * 200, .1).map(function(data, i) {
      return {
        key: 'Stream' + i,
        values: data
      };
    });
  };
  stream_layers = function(n, m, o) {
    var bump;
    if (arguments.length < 3) {
      o = 0;
    }
    bump = function(a) {
      var i, w, x, y, z, _i, _results;
      x = 1 / (.1 + Math.random());
      y = 2 * Math.random() - .5;
      z = 10 / (.1 + Math.random());
      _results = [];
      for (i = _i = 0; 0 <= m ? _i <= m : _i >= m; i = 0 <= m ? ++_i : --_i) {
        w = (i / m - y) * z;
        _results.push(a[i] += x * Math.exp(-w * w));
      }
      return _results;
    };
    return d3.range(n).map(function() {
      var a, i, _i, _j;
      a = [];
      for (i = _i = 0; 0 <= m ? _i <= m : _i >= m; i = 0 <= m ? ++_i : --_i) {
        a[i] = o + o * Math.random();
      }
      for (i = _j = 0; _j <= 5; i = ++_j) {
        bump(a);
      }
      return a.map(stream_index);
    });
  };
  stream_waves = function(n, m) {
    return d3.range(n).map(function(i) {
      return d3.range(m).map(function(j) {
        var x;
        x = 20 * j / m - i / 3;
        return 2 * x * Math.exp(-.5 * x);
      }).map(stream_index);
    });
  };
  stream_index = function(d, i) {
    return {
      x: i,
      y: Math.max(0, d)
    };
  };
  data_2 = {
    key: "test1",
    values: []
  };
  for (i = _i = 1; _i <= 1000; i = ++_i) {
    data_2.values.push({
      x: i,
      y: i * Math.random() * 100 - 20
    });
  }
  data_test = [data_2];
  drawLineWithFocusChart({
    data: data_test,
    elt: "#line-with-focus-chart svg",
    xLabel: "采集时间",
    yLabel: "采集值"
  });
  $('#datepicker0').pickadate({
    today: '今日',
    clear: '清除',
    format: 'yyyy/mm/dd'
  });
  $('#datepicker1').pickadate({
    today: '今日',
    clear: '清除',
    format: 'yyyy/mm/dd'
  });
});
